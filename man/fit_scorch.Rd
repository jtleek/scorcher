% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_scorch.R
\name{fit_scorch}
\alias{fit_scorch}
\title{Fit a Scorch Model}
\usage{
fit_scorch(
  scorch_model,
  loss = nn_mse_loss,
  loss_params = list(reduction = "mean"),
  optim = optim_adam,
  optim_params = list(lr = 0.001),
  num_epochs = 10,
  verbose = TRUE,
  preprocess_fn = NULL,
  clip_grad = NULL,
  clip_params = list(),
  ...
)
}
\arguments{
\item{scorch_model}{A scorch model object}

\item{loss}{A loss function from the torch package.
Default is \code{nn_mse_loss}.}

\item{loss_params}{A list of parameters to pass to the loss function.
Default is \code{list(reduction = "mean")}.}

\item{optim}{An optimizer from the torch package.
Default is \code{optim_adam}.}

\item{optim_params}{A list of parameters to pass to the optimizer.
Default is \code{list(lr = 0.001)}.}

\item{num_epochs}{The number of epochs to train for. Default is 10.}

\item{verbose}{A logical value indicating whether to print loss results at
each epoch. Default is TRUE.}

\item{preprocess_fn}{An optional function with additional, context specific
steps to preprocess batches of data before training. The function must
return a list containing at least \code{input} and \code{output}.}

\item{clip_grad}{A character string specifying the gradient clipping
strategy. Options are \code{"norm"} or \code{"value"}. Defaults to NULL (no clipping).}

\item{clip_params}{A list of parameters for gradient clipping.
\itemize{
\item For \code{"norm"}: should include \code{max_norm} (a numeric value).
\item For \code{"value"}: should include \code{clip_value} (a numeric value).
}}

\item{...}{Additional arguments passed to the \code{preprocess_fn}.}
}
\value{
A trained scorch model.
}
\description{
Fit a Scorch Model
}
\examples{

input  <- mtcars |> as.matrix() |> torch::torch_tensor()

output <- mtcars |> as.matrix() |> torch::torch_tensor()

dl <- scorch_create_dataloader(input, output, batch_size = 2)

scorch_model <- dl |> initiate_scorch() |>

  scorch_layer("linear", 11, 5) |>

  scorch_layer("linear", 5, 2) |>

  compile_scorch() |>

  fit_scorch()

first_batch <- head(dl)

test_output <- scorch_model(first_batch$input)
}
